{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Animal Center Project - DS Build Week 1 ","provenance":[],"collapsed_sections":["BdWQzvenXwLB","UmOBPIl9M_wL","agEkn7bPLiVH","mVFmuUoSPSkm","3T23aEhCjJdX","wmmac6Gt8fmw","fTVOmV5Aj3ml","5MUpJ3Gh8m3V","BSqP4acVdZeM"],"authorship_tag":"ABX9TyNnmdGGl4LFdfaCPb66hknW"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"xly7urYqXYlX"},"source":["###Research Question:\n","\n","In the United States, animal shelters are known to euthanize animals based on behavior and/or signs of aggression. By looking at the Austin, Texas Animal Center's data, I will analyze why certain animals are euthanized, the timeline to when the Center euthanizes the animals, and if the animal center is true to their statement that 90% of animals are not euthenized. "]},{"cell_type":"markdown","metadata":{"id":"XDMBdj6OLH3u"},"source":["# About the Data:\n","\n","***Intakes:***\n","\n","Animal Center Intakes from Oct, 1st 2013 to present. Intakes represent the status of animals as they arrive at the Animal Center. All animals receive a unique Animal ID during intake. Annually over 90% of animals entering the center, are adopted, transferred to rescue or returned to their owners.\n","\n","***Outcomes:***\n","\n","Animal Center Outcomes from Oct, 1st 2013 to present. Outcomes represent the status of animals as they leave the Animal Center. All animals receive a unique Animal ID during intake. Annually over 90% of animals entering the center, are adopted, transferred to rescue or returned to their owners. The Outcomes data set reflects that Austin, TX. is the largest \"No Kill\" city in the country."]},{"cell_type":"markdown","metadata":{"id":"BdWQzvenXwLB"},"source":["## Importing Data"]},{"cell_type":"code","metadata":{"id":"sw4rS1HpLtbp","executionInfo":{"status":"ok","timestamp":1611797106844,"user_tz":300,"elapsed":1016,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}}},"source":["#importing packages that I will need\n","import pandas as pd\n","import numpy as np\n","import matplotlib as plt\n","from matplotlib.pyplot import hist\n","from matplotlib import pyplot as plt \n","from matplotlib.lines import Line2D\n","from datetime import datetime"],"execution_count":197,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"zEDOsk9tUWxj","executionInfo":{"status":"ok","timestamp":1611797108348,"user_tz":300,"elapsed":2498,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"7fd9d463-c787-43d5-b666-c1f4801a3d1f"},"source":["intake_headers = ['Animal ID', 'Name Intake', 'Intake DateTime', 'Intake MonthYear','Found Location', 'Intake Type', 'Intake Condition', 'Animal Type',\n","                  'Sex Upon Intake', 'Age Upon Intake', 'Breed', 'Color']\n","intake = pd.read_csv('https://raw.githubusercontent.com/duellal/Datasets/main/Austin_Animal_Center_Intakes.csv', header=1, names=intake_headers)\n","intake.head(5)"],"execution_count":198,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Animal ID</th>\n","      <th>Name Intake</th>\n","      <th>Intake DateTime</th>\n","      <th>Intake MonthYear</th>\n","      <th>Found Location</th>\n","      <th>Intake Type</th>\n","      <th>Intake Condition</th>\n","      <th>Animal Type</th>\n","      <th>Sex Upon Intake</th>\n","      <th>Age Upon Intake</th>\n","      <th>Breed</th>\n","      <th>Color</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A706918</td>\n","      <td>Belle</td>\n","      <td>07/05/2015 12:59:00 PM</td>\n","      <td>07/05/2015 12:59:00 PM</td>\n","      <td>9409 Bluegrass Dr in Austin (TX)</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Spayed Female</td>\n","      <td>8 years</td>\n","      <td>English Springer Spaniel</td>\n","      <td>White/Liver</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A724273</td>\n","      <td>Runster</td>\n","      <td>04/14/2016 06:43:00 PM</td>\n","      <td>04/14/2016 06:43:00 PM</td>\n","      <td>2818 Palomino Trail in Austin (TX)</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Intact Male</td>\n","      <td>11 months</td>\n","      <td>Basenji Mix</td>\n","      <td>Sable/White</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A665644</td>\n","      <td>NaN</td>\n","      <td>10/21/2013 07:59:00 AM</td>\n","      <td>10/21/2013 07:59:00 AM</td>\n","      <td>Austin (TX)</td>\n","      <td>Stray</td>\n","      <td>Sick</td>\n","      <td>Cat</td>\n","      <td>Intact Female</td>\n","      <td>4 weeks</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Calico</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A682524</td>\n","      <td>Rio</td>\n","      <td>06/29/2014 10:38:00 AM</td>\n","      <td>06/29/2014 10:38:00 AM</td>\n","      <td>800 Grove Blvd in Austin (TX)</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>4 years</td>\n","      <td>Doberman Pinsch/Australian Cattle Dog</td>\n","      <td>Tan/Gray</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A743852</td>\n","      <td>Odin</td>\n","      <td>02/18/2017 12:46:00 PM</td>\n","      <td>02/18/2017 12:46:00 PM</td>\n","      <td>Austin (TX)</td>\n","      <td>Owner Surrender</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>2 years</td>\n","      <td>Labrador Retriever Mix</td>\n","      <td>Chocolate</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Animal ID Name Intake  ...                                  Breed        Color\n","0   A706918       Belle  ...               English Springer Spaniel  White/Liver\n","1   A724273     Runster  ...                            Basenji Mix  Sable/White\n","2   A665644         NaN  ...                 Domestic Shorthair Mix       Calico\n","3   A682524         Rio  ...  Doberman Pinsch/Australian Cattle Dog     Tan/Gray\n","4   A743852        Odin  ...                 Labrador Retriever Mix    Chocolate\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":198}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"Ke5aE5uSVF_l","executionInfo":{"status":"ok","timestamp":1611797109500,"user_tz":300,"elapsed":3635,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"8571e76b-0b81-48f1-a3aa-2ec448d6423a"},"source":["outcome_headers = ['Animal ID', 'Name Outcome', 'Outcome DateTime', 'Outcome MonthYear','Date of Birth', 'Outcome Type', 'Outcome Subtype', \n","                   'Animal Type', 'Sex Upon Outcome', 'Age Upon Outcome', 'Breed', 'Color']\n","outcome = pd.read_csv('https://raw.githubusercontent.com/duellal/Datasets/main/Austin_Animal_Center_Outcomes.csv', header=1, names=outcome_headers)\n","outcome.head(5)"],"execution_count":199,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Animal ID</th>\n","      <th>Name Outcome</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome MonthYear</th>\n","      <th>Date of Birth</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Animal Type</th>\n","      <th>Sex Upon Outcome</th>\n","      <th>Age Upon Outcome</th>\n","      <th>Breed</th>\n","      <th>Color</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A776359</td>\n","      <td>Gizmo</td>\n","      <td>07/18/2018 04:02:00 PM</td>\n","      <td>07/18/2018 04:02:00 PM</td>\n","      <td>07/12/2017</td>\n","      <td>Adoption</td>\n","      <td>NaN</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>1 year</td>\n","      <td>Chihuahua Shorthair Mix</td>\n","      <td>White/Brown</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A821648</td>\n","      <td>NaN</td>\n","      <td>08/16/2020 11:38:00 AM</td>\n","      <td>08/16/2020 11:38:00 AM</td>\n","      <td>08/16/2019</td>\n","      <td>Euthanasia</td>\n","      <td>NaN</td>\n","      <td>Other</td>\n","      <td>Unknown</td>\n","      <td>1 year</td>\n","      <td>Raccoon</td>\n","      <td>Gray</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A720371</td>\n","      <td>Moose</td>\n","      <td>02/13/2016 05:59:00 PM</td>\n","      <td>02/13/2016 05:59:00 PM</td>\n","      <td>10/08/2015</td>\n","      <td>Adoption</td>\n","      <td>NaN</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>4 months</td>\n","      <td>Anatol Shepherd/Labrador Retriever</td>\n","      <td>Buff</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A674754</td>\n","      <td>NaN</td>\n","      <td>03/18/2014 11:47:00 AM</td>\n","      <td>03/18/2014 11:47:00 AM</td>\n","      <td>03/12/2014</td>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","      <td>Cat</td>\n","      <td>Intact Male</td>\n","      <td>6 days</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Orange Tabby</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A659412</td>\n","      <td>Princess</td>\n","      <td>10/05/2020 02:37:00 PM</td>\n","      <td>10/05/2020 02:37:00 PM</td>\n","      <td>03/24/2013</td>\n","      <td>Adoption</td>\n","      <td>NaN</td>\n","      <td>Dog</td>\n","      <td>Spayed Female</td>\n","      <td>7 years</td>\n","      <td>Chihuahua Shorthair Mix</td>\n","      <td>Brown</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Animal ID Name Outcome  ...                               Breed         Color\n","0   A776359        Gizmo  ...             Chihuahua Shorthair Mix   White/Brown\n","1   A821648          NaN  ...                             Raccoon          Gray\n","2   A720371        Moose  ...  Anatol Shepherd/Labrador Retriever          Buff\n","3   A674754          NaN  ...              Domestic Shorthair Mix  Orange Tabby\n","4   A659412     Princess  ...             Chihuahua Shorthair Mix         Brown\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":199}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4e6B2lujXW08","executionInfo":{"status":"ok","timestamp":1611797109510,"user_tz":300,"elapsed":3633,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"429f410a-f252-4ef4-9fb1-234242e73347"},"source":["print('Intakes:', intake.shape)\n","print(\"Outcomes:\", outcome.shape)"],"execution_count":200,"outputs":[{"output_type":"stream","text":["Intakes: (123365, 12)\n","Outcomes: (123672, 12)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"Q86mftInrpaq","executionInfo":{"status":"ok","timestamp":1611797109512,"user_tz":300,"elapsed":3625,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"c2e5e6d6-1760-42b6-f774-a5f2a2c69a15"},"source":["animal_shelter = pd.merge(intake, outcome, how='inner', on=['Animal ID'])\n","animal_shelter.head()"],"execution_count":201,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Animal ID</th>\n","      <th>Name Intake</th>\n","      <th>Intake DateTime</th>\n","      <th>Intake MonthYear</th>\n","      <th>Found Location</th>\n","      <th>Intake Type</th>\n","      <th>Intake Condition</th>\n","      <th>Animal Type_x</th>\n","      <th>Sex Upon Intake</th>\n","      <th>Age Upon Intake</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Name Outcome</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome MonthYear</th>\n","      <th>Date of Birth</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Animal Type_y</th>\n","      <th>Sex Upon Outcome</th>\n","      <th>Age Upon Outcome</th>\n","      <th>Breed_y</th>\n","      <th>Color_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A706918</td>\n","      <td>Belle</td>\n","      <td>07/05/2015 12:59:00 PM</td>\n","      <td>07/05/2015 12:59:00 PM</td>\n","      <td>9409 Bluegrass Dr in Austin (TX)</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Spayed Female</td>\n","      <td>8 years</td>\n","      <td>English Springer Spaniel</td>\n","      <td>White/Liver</td>\n","      <td>Belle</td>\n","      <td>07/05/2015 03:13:00 PM</td>\n","      <td>07/05/2015 03:13:00 PM</td>\n","      <td>07/05/2007</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Dog</td>\n","      <td>Spayed Female</td>\n","      <td>8 years</td>\n","      <td>English Springer Spaniel</td>\n","      <td>White/Liver</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A724273</td>\n","      <td>Runster</td>\n","      <td>04/14/2016 06:43:00 PM</td>\n","      <td>04/14/2016 06:43:00 PM</td>\n","      <td>2818 Palomino Trail in Austin (TX)</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Intact Male</td>\n","      <td>11 months</td>\n","      <td>Basenji Mix</td>\n","      <td>Sable/White</td>\n","      <td>Runster</td>\n","      <td>04/21/2016 05:17:00 PM</td>\n","      <td>04/21/2016 05:17:00 PM</td>\n","      <td>04/17/2015</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>1 year</td>\n","      <td>Basenji Mix</td>\n","      <td>Sable/White</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A665644</td>\n","      <td>NaN</td>\n","      <td>10/21/2013 07:59:00 AM</td>\n","      <td>10/21/2013 07:59:00 AM</td>\n","      <td>Austin (TX)</td>\n","      <td>Stray</td>\n","      <td>Sick</td>\n","      <td>Cat</td>\n","      <td>Intact Female</td>\n","      <td>4 weeks</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Calico</td>\n","      <td>NaN</td>\n","      <td>10/21/2013 11:39:00 AM</td>\n","      <td>10/21/2013 11:39:00 AM</td>\n","      <td>09/21/2013</td>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","      <td>Cat</td>\n","      <td>Intact Female</td>\n","      <td>4 weeks</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Calico</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A682524</td>\n","      <td>Rio</td>\n","      <td>06/29/2014 10:38:00 AM</td>\n","      <td>06/29/2014 10:38:00 AM</td>\n","      <td>800 Grove Blvd in Austin (TX)</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>4 years</td>\n","      <td>Doberman Pinsch/Australian Cattle Dog</td>\n","      <td>Tan/Gray</td>\n","      <td>Rio</td>\n","      <td>07/02/2014 02:16:00 PM</td>\n","      <td>07/02/2014 02:16:00 PM</td>\n","      <td>06/29/2010</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>4 years</td>\n","      <td>Doberman Pinsch/Australian Cattle Dog</td>\n","      <td>Tan/Gray</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A743852</td>\n","      <td>Odin</td>\n","      <td>02/18/2017 12:46:00 PM</td>\n","      <td>02/18/2017 12:46:00 PM</td>\n","      <td>Austin (TX)</td>\n","      <td>Owner Surrender</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>2 years</td>\n","      <td>Labrador Retriever Mix</td>\n","      <td>Chocolate</td>\n","      <td>Odin</td>\n","      <td>02/21/2017 05:44:00 PM</td>\n","      <td>02/21/2017 05:44:00 PM</td>\n","      <td>02/18/2015</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>2 years</td>\n","      <td>Labrador Retriever Mix</td>\n","      <td>Chocolate</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Animal ID Name Intake  ...                                Breed_y      Color_y\n","0   A706918       Belle  ...               English Springer Spaniel  White/Liver\n","1   A724273     Runster  ...                            Basenji Mix  Sable/White\n","2   A665644         NaN  ...                 Domestic Shorthair Mix       Calico\n","3   A682524         Rio  ...  Doberman Pinsch/Australian Cattle Dog     Tan/Gray\n","4   A743852        Odin  ...                 Labrador Retriever Mix    Chocolate\n","\n","[5 rows x 23 columns]"]},"metadata":{"tags":[]},"execution_count":201}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G_5xzar3sWTT","executionInfo":{"status":"ok","timestamp":1611797109644,"user_tz":300,"elapsed":3744,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"6ca2f068-67d9-4c78-899c-dd1074a5dca4"},"source":["#Based on how many animal outcomes do not have an animal intake, I decided to look at the Animal ID intake to see if there were duplicates\n","intake['Animal ID'].value_counts()"],"execution_count":202,"outputs":[{"output_type":"execute_result","data":{"text/plain":["A721033    33\n","A718223    14\n","A718877    12\n","A706536    11\n","A717053     9\n","           ..\n","A821503     1\n","A809483     1\n","A707813     1\n","A725915     1\n","A737958     1\n","Name: Animal ID, Length: 110292, dtype: int64"]},"metadata":{"tags":[]},"execution_count":202}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c-KCyKRT_wsm","executionInfo":{"status":"ok","timestamp":1611797109807,"user_tz":300,"elapsed":3898,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"2a40949b-a8ca-4583-dc39-299ce5c24d32"},"source":["#Based on how many animal outcomes do not have an animal intake, I decided to look at the Animal ID intake to see if there were duplicates\n","outcome['Animal ID'].value_counts()"],"execution_count":203,"outputs":[{"output_type":"execute_result","data":{"text/plain":["A721033    33\n","A718223    14\n","A718877    12\n","A706536    11\n","A761266     9\n","           ..\n","A760810     1\n","A792825     1\n","A753535     1\n","A671448     1\n","A737958     1\n","Name: Animal ID, Length: 110607, dtype: int64"]},"metadata":{"tags":[]},"execution_count":203}]},{"cell_type":"markdown","metadata":{"id":"UmOBPIl9M_wL"},"source":["##Cleaning Up the Dataframe created"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"As2CvrfxfNkW","executionInfo":{"status":"ok","timestamp":1611797110146,"user_tz":300,"elapsed":4229,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"8cd21138-a743-445d-d4d7-3eae8ef009a1"},"source":["#Now that I have gathered the dataframe for all animals with intakes and outcomes, I will clean up the dataframe by first dropping the columns not needed\n","animal_shelter = animal_shelter.drop(['Intake MonthYear', 'Found Location', 'Outcome MonthYear', 'Breed_y', 'Color_y', 'Animal Type_y'], axis=1)\n","animal_shelter"],"execution_count":204,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Animal ID</th>\n","      <th>Name Intake</th>\n","      <th>Intake DateTime</th>\n","      <th>Intake Type</th>\n","      <th>Intake Condition</th>\n","      <th>Animal Type_x</th>\n","      <th>Sex Upon Intake</th>\n","      <th>Age Upon Intake</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Name Outcome</th>\n","      <th>Outcome DateTime</th>\n","      <th>Date of Birth</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Sex Upon Outcome</th>\n","      <th>Age Upon Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A706918</td>\n","      <td>Belle</td>\n","      <td>07/05/2015 12:59:00 PM</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Spayed Female</td>\n","      <td>8 years</td>\n","      <td>English Springer Spaniel</td>\n","      <td>White/Liver</td>\n","      <td>Belle</td>\n","      <td>07/05/2015 03:13:00 PM</td>\n","      <td>07/05/2007</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Spayed Female</td>\n","      <td>8 years</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A724273</td>\n","      <td>Runster</td>\n","      <td>04/14/2016 06:43:00 PM</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Intact Male</td>\n","      <td>11 months</td>\n","      <td>Basenji Mix</td>\n","      <td>Sable/White</td>\n","      <td>Runster</td>\n","      <td>04/21/2016 05:17:00 PM</td>\n","      <td>04/17/2015</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Neutered Male</td>\n","      <td>1 year</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A665644</td>\n","      <td>NaN</td>\n","      <td>10/21/2013 07:59:00 AM</td>\n","      <td>Stray</td>\n","      <td>Sick</td>\n","      <td>Cat</td>\n","      <td>Intact Female</td>\n","      <td>4 weeks</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Calico</td>\n","      <td>NaN</td>\n","      <td>10/21/2013 11:39:00 AM</td>\n","      <td>09/21/2013</td>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","      <td>Intact Female</td>\n","      <td>4 weeks</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A682524</td>\n","      <td>Rio</td>\n","      <td>06/29/2014 10:38:00 AM</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>4 years</td>\n","      <td>Doberman Pinsch/Australian Cattle Dog</td>\n","      <td>Tan/Gray</td>\n","      <td>Rio</td>\n","      <td>07/02/2014 02:16:00 PM</td>\n","      <td>06/29/2010</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Neutered Male</td>\n","      <td>4 years</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A743852</td>\n","      <td>Odin</td>\n","      <td>02/18/2017 12:46:00 PM</td>\n","      <td>Owner Surrender</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>2 years</td>\n","      <td>Labrador Retriever Mix</td>\n","      <td>Chocolate</td>\n","      <td>Odin</td>\n","      <td>02/21/2017 05:44:00 PM</td>\n","      <td>02/18/2015</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Neutered Male</td>\n","      <td>2 years</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>159275</th>\n","      <td>A828439</td>\n","      <td>NaN</td>\n","      <td>01/16/2021 01:30:00 PM</td>\n","      <td>Owner Surrender</td>\n","      <td>Injured</td>\n","      <td>Dog</td>\n","      <td>Intact Female</td>\n","      <td>8 months</td>\n","      <td>Great Pyrenees</td>\n","      <td>White/Black</td>\n","      <td>NaN</td>\n","      <td>01/16/2021 04:40:00 PM</td>\n","      <td>05/16/2020</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>Intact Female</td>\n","      <td>8 months</td>\n","    </tr>\n","    <tr>\n","      <th>159276</th>\n","      <td>A828379</td>\n","      <td>NaN</td>\n","      <td>01/15/2021 08:57:00 AM</td>\n","      <td>Wildlife</td>\n","      <td>Sick</td>\n","      <td>Other</td>\n","      <td>Unknown</td>\n","      <td>1 year</td>\n","      <td>Skunk</td>\n","      <td>Black/White</td>\n","      <td>NaN</td>\n","      <td>01/15/2021 09:36:00 AM</td>\n","      <td>01/15/2020</td>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","      <td>Unknown</td>\n","      <td>1 year</td>\n","    </tr>\n","    <tr>\n","      <th>159277</th>\n","      <td>A828445</td>\n","      <td>Blue</td>\n","      <td>01/16/2021 04:15:00 PM</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Intact Male</td>\n","      <td>2 years</td>\n","      <td>Boxer</td>\n","      <td>Brown/White</td>\n","      <td>Blue</td>\n","      <td>01/17/2021 01:33:00 PM</td>\n","      <td>01/16/2019</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Intact Male</td>\n","      <td>2 years</td>\n","    </tr>\n","    <tr>\n","      <th>159278</th>\n","      <td>A828463</td>\n","      <td>Ej</td>\n","      <td>01/17/2021 11:27:00 AM</td>\n","      <td>Owner Surrender</td>\n","      <td>Injured</td>\n","      <td>Cat</td>\n","      <td>Spayed Female</td>\n","      <td>6 years</td>\n","      <td>Domestic Shorthair</td>\n","      <td>Brown Tabby</td>\n","      <td>Ej</td>\n","      <td>01/17/2021 02:00:00 PM</td>\n","      <td>01/17/2015</td>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","      <td>Spayed Female</td>\n","      <td>6 years</td>\n","    </tr>\n","    <tr>\n","      <th>159279</th>\n","      <td>A828492</td>\n","      <td>NaN</td>\n","      <td>01/18/2021 04:49:00 PM</td>\n","      <td>Wildlife</td>\n","      <td>Sick</td>\n","      <td>Other</td>\n","      <td>Unknown</td>\n","      <td>2 years</td>\n","      <td>Fox</td>\n","      <td>Red</td>\n","      <td>NaN</td>\n","      <td>01/18/2021 05:07:00 PM</td>\n","      <td>01/18/2019</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>159280 rows × 17 columns</p>\n","</div>"],"text/plain":["       Animal ID Name Intake  ... Sex Upon Outcome Age Upon Outcome\n","0        A706918       Belle  ...    Spayed Female          8 years\n","1        A724273     Runster  ...    Neutered Male           1 year\n","2        A665644         NaN  ...    Intact Female          4 weeks\n","3        A682524         Rio  ...    Neutered Male          4 years\n","4        A743852        Odin  ...    Neutered Male          2 years\n","...          ...         ...  ...              ...              ...\n","159275   A828439         NaN  ...    Intact Female         8 months\n","159276   A828379         NaN  ...          Unknown           1 year\n","159277   A828445        Blue  ...      Intact Male          2 years\n","159278   A828463          Ej  ...    Spayed Female          6 years\n","159279   A828492         NaN  ...          Unknown              NaN\n","\n","[159280 rows x 17 columns]"]},"metadata":{"tags":[]},"execution_count":204}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NpWOE1IhNDFl","executionInfo":{"status":"ok","timestamp":1611797110147,"user_tz":300,"elapsed":4212,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"f6c96ee4-be54-404f-f4ec-78a9044e2c4d"},"source":["animal_shelter.isnull().sum()\n","\n","#The name NaNs should not effect the analysis. However, Outcome Subtype may effect it. If I use this section, I will have to address the NaNs"],"execution_count":205,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Animal ID               0\n","Name Intake         39651\n","Intake DateTime         0\n","Intake Type             0\n","Intake Condition        0\n","Animal Type_x           0\n","Sex Upon Intake         1\n","Age Upon Intake         0\n","Breed_x                 0\n","Color_x                 0\n","Name Outcome        39651\n","Outcome DateTime        0\n","Date of Birth           0\n","Outcome Type           16\n","Outcome Subtype     97001\n","Sex Upon Outcome        1\n","Age Upon Outcome        8\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":205}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4e5cKnStNYF4","executionInfo":{"status":"ok","timestamp":1611797110336,"user_tz":300,"elapsed":4392,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"4826c8c4-4735-4872-bd85-f3a0aaf28b5b"},"source":["#There are a lot of NaNs for names, however that is understandable since many animals in shelters are strays, or wildlife and may not have a name.\n","#However, there seems to be a considerable amount of Outcome Subtype being NaN values, especially since only 16 Outcome Types are NaNs.\n","#I will look to see why that is, first seeing what subtypes there are.\n","\n","animal_shelter['Outcome Type'].value_counts()\n","\n","#Need to figure out how to make a table with column A being Outcome Type and column B being the Outcome Subtypes. "],"execution_count":206,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Adoption           71803\n","Transfer           39824\n","Return to Owner    35793\n","Euthanasia          8668\n","Rto-Adopt           1312\n","Died                1187\n","Disposal             566\n","Missing               91\n","Relocate              20\n","Name: Outcome Type, dtype: int64"]},"metadata":{"tags":[]},"execution_count":206}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2IlLky1NZ2EL","executionInfo":{"status":"ok","timestamp":1611797110336,"user_tz":300,"elapsed":4383,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"66bc2f81-2513-47b9-e57d-f286f0c582a9"},"source":["animal_shelter.groupby('Outcome Type')['Outcome Subtype'].unique()\n","\n","#Looking at the subtype of the outcomes, we can see that all outcome types except Transfer have NaN values. "],"execution_count":207,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Outcome Type\n","Adoption                                [Foster, nan, Offsite, Barn]\n","Died               [In Kennel, nan, In Surgery, At Vet, Enroute, ...\n","Disposal                                                       [nan]\n","Euthanasia         [Suffering, Rabies Risk, At Vet, Medical, nan,...\n","Missing                  [In Foster, Possible Theft, nan, In Kennel]\n","Relocate                                                       [nan]\n","Return to Owner        [nan, Field, At Vet, Prc, Foster, Customer S]\n","Rto-Adopt                                                      [nan]\n","Transfer                            [Partner, SCRP, Snr, Barn, Emer]\n","Name: Outcome Subtype, dtype: object"]},"metadata":{"tags":[]},"execution_count":207}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3R0R_ZwVZ6fl","executionInfo":{"status":"ok","timestamp":1611797110337,"user_tz":300,"elapsed":4374,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"c80f6f79-ac88-4919-8079-b4eef3a06082"},"source":["#I want to see what the other values in Died and Euthanasia are\n","\n","outcome_subtypes = animal_shelter.groupby('Outcome Type')['Outcome Subtype'].unique()\n","print('Died Subtype:\\n', outcome_subtypes['Died'])\n","print('Euthanasia Subtypes:\\n', outcome_subtypes['Euthanasia'])"],"execution_count":208,"outputs":[{"output_type":"stream","text":["Died Subtype:\n"," ['In Kennel' nan 'In Surgery' 'At Vet' 'Enroute' 'In Foster']\n","Euthanasia Subtypes:\n"," ['Suffering' 'Rabies Risk' 'At Vet' 'Medical' nan 'Underage' 'Aggressive'\n"," 'Court/Investigation' 'Behavior']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"agEkn7bPLiVH"},"source":["##Outcomes for Animals who have Died or have been Euthenized\n","\n","This section will look at the different outcomes for the animals. I will make a visualization in order to accurately represent the data found about the outcomes."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"28AjLqODFLtx","executionInfo":{"status":"ok","timestamp":1611797110338,"user_tz":300,"elapsed":4367,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"85d5ff8a-996a-40c7-c692-c0e8193593c3"},"source":["animal_shelter['Outcome Type'].value_counts()"],"execution_count":209,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Adoption           71803\n","Transfer           39824\n","Return to Owner    35793\n","Euthanasia          8668\n","Rto-Adopt           1312\n","Died                1187\n","Disposal             566\n","Missing               91\n","Relocate              20\n","Name: Outcome Type, dtype: int64"]},"metadata":{"tags":[]},"execution_count":209}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"5g8OpgLGg2r5","executionInfo":{"status":"ok","timestamp":1611797110647,"user_tz":300,"elapsed":4665,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"45de6243-4d9d-4675-8aa7-1408492132be"},"source":["fig, ax = plt.subplots()\n","\n","plt.bar(x=['Adoption', 'Transfer', 'Return to Owner', 'Euthenize', 'RTO Adoption', 'Died', 'Disposal', 'Missing', 'Relocate'],\n","        height=animal_shelter['Outcome Type'].value_counts())\n","\n","plt.xlabel('Outcome Type')\n","plt.ylabel('Number of Animals with Outcome')\n","plt.title('Austin Animal Center Outcomes for Animals that Entered Facility')\n","plt.xticks(rotation=45)\n","\n","plt.show()"],"execution_count":210,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"rtP7vrpGx75L","executionInfo":{"status":"ok","timestamp":1611797110839,"user_tz":300,"elapsed":4841,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"8a1e224e-51d3-4e2d-bc7c-23e2fe9759d8"},"source":["#Making a bar graph for the outcomes with a lower amount of animals\n","fig, ax = plt.subplots()\n","\n","plt.bar(x=['RTO Adoption', 'Died', 'Disposal', 'Missing', 'Relocate'],\n","        height=[1312, 1187, 566, 91, 20])\n","\n","plt.xlabel('Outcome Type')\n","plt.ylabel('Number of Animals with Outcome')\n","plt.title('Austin Animal Center Outcomes for Animals that Entered Facility')\n","plt.xticks(rotation=45)\n","\n","plt.show()"],"execution_count":211,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"xmq1NFyR-6Qr","executionInfo":{"status":"ok","timestamp":1611797110842,"user_tz":300,"elapsed":4830,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"510cf502-904a-4ec7-9675-5f65e1cf84df"},"source":["outcome = animal_shelter['Outcome Type'].reset_index()\n","outcome"],"execution_count":212,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Outcome Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Transfer</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>159275</th>\n","      <td>159275</td>\n","      <td>Euthanasia</td>\n","    </tr>\n","    <tr>\n","      <th>159276</th>\n","      <td>159276</td>\n","      <td>Euthanasia</td>\n","    </tr>\n","    <tr>\n","      <th>159277</th>\n","      <td>159277</td>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>159278</th>\n","      <td>159278</td>\n","      <td>Transfer</td>\n","    </tr>\n","    <tr>\n","      <th>159279</th>\n","      <td>159279</td>\n","      <td>Euthanasia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>159280 rows × 2 columns</p>\n","</div>"],"text/plain":["         index     Outcome Type\n","0            0  Return to Owner\n","1            1  Return to Owner\n","2            2         Transfer\n","3            3  Return to Owner\n","4            4  Return to Owner\n","...        ...              ...\n","159275  159275       Euthanasia\n","159276  159276       Euthanasia\n","159277  159277  Return to Owner\n","159278  159278         Transfer\n","159279  159279       Euthanasia\n","\n","[159280 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":212}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"nJknay6E_rXB","executionInfo":{"status":"ok","timestamp":1611797110845,"user_tz":300,"elapsed":4819,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"20231166-eabd-4f68-81b4-9b3d824b3783"},"source":["outcome_sub = animal_shelter['Outcome Subtype'].reset_index()\n","outcome_sub"],"execution_count":213,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Outcome Subtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Partner</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>159275</th>\n","      <td>159275</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>159276</th>\n","      <td>159276</td>\n","      <td>Rabies Risk</td>\n","    </tr>\n","    <tr>\n","      <th>159277</th>\n","      <td>159277</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>159278</th>\n","      <td>159278</td>\n","      <td>Partner</td>\n","    </tr>\n","    <tr>\n","      <th>159279</th>\n","      <td>159279</td>\n","      <td>Suffering</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>159280 rows × 2 columns</p>\n","</div>"],"text/plain":["         index Outcome Subtype\n","0            0             NaN\n","1            1             NaN\n","2            2         Partner\n","3            3             NaN\n","4            4             NaN\n","...        ...             ...\n","159275  159275       Suffering\n","159276  159276     Rabies Risk\n","159277  159277             NaN\n","159278  159278         Partner\n","159279  159279       Suffering\n","\n","[159280 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":213}]},{"cell_type":"code","metadata":{"id":"vCGQDin3_FI6","executionInfo":{"status":"ok","timestamp":1611797110846,"user_tz":300,"elapsed":4806,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}}},"source":["outcome_subtype_no_nan = animal_shelter['Outcome Subtype'].dropna().reset_index()"],"execution_count":214,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"-JBW0Lsu8uWd","executionInfo":{"status":"ok","timestamp":1611797111047,"user_tz":300,"elapsed":4995,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"08d4a542-97cb-4178-aceb-1153ac933c2a"},"source":["outcomes = pd.merge(outcome, outcome_sub, on='index')\n","outcomes"],"execution_count":215,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>159275</th>\n","      <td>159275</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>159276</th>\n","      <td>159276</td>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","    </tr>\n","    <tr>\n","      <th>159277</th>\n","      <td>159277</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>159278</th>\n","      <td>159278</td>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","    </tr>\n","    <tr>\n","      <th>159279</th>\n","      <td>159279</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>159280 rows × 3 columns</p>\n","</div>"],"text/plain":["         index     Outcome Type Outcome Subtype\n","0            0  Return to Owner             NaN\n","1            1  Return to Owner             NaN\n","2            2         Transfer         Partner\n","3            3  Return to Owner             NaN\n","4            4  Return to Owner             NaN\n","...        ...              ...             ...\n","159275  159275       Euthanasia       Suffering\n","159276  159276       Euthanasia     Rabies Risk\n","159277  159277  Return to Owner             NaN\n","159278  159278         Transfer         Partner\n","159279  159279       Euthanasia       Suffering\n","\n","[159280 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":215}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"peRsA5xyAFb1","executionInfo":{"status":"ok","timestamp":1611797111048,"user_tz":300,"elapsed":4980,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"64ec98a7-760c-47c3-d843-f72cacea79cd"},"source":["outcomes_no_index = outcomes.drop('index', axis=1)\n","outcomes_no_index"],"execution_count":216,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>159275</th>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>159276</th>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","    </tr>\n","    <tr>\n","      <th>159277</th>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>159278</th>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","    </tr>\n","    <tr>\n","      <th>159279</th>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>159280 rows × 2 columns</p>\n","</div>"],"text/plain":["           Outcome Type Outcome Subtype\n","0       Return to Owner             NaN\n","1       Return to Owner             NaN\n","2              Transfer         Partner\n","3       Return to Owner             NaN\n","4       Return to Owner             NaN\n","...                 ...             ...\n","159275       Euthanasia       Suffering\n","159276       Euthanasia     Rabies Risk\n","159277  Return to Owner             NaN\n","159278         Transfer         Partner\n","159279       Euthanasia       Suffering\n","\n","[159280 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":216}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"8kQq1InxCvGo","executionInfo":{"status":"ok","timestamp":1611797111049,"user_tz":300,"elapsed":4965,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"7ff4b26a-6784-4148-eeb3-5fdc97230090"},"source":["died_subtypes = outcomes_no_index[(outcomes_no_index['Outcome Type'] == 'Died')]\n","died_subtypes"],"execution_count":217,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>56</th>\n","      <td>Died</td>\n","      <td>In Kennel</td>\n","    </tr>\n","    <tr>\n","      <th>136</th>\n","      <td>Died</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>622</th>\n","      <td>Died</td>\n","      <td>In Surgery</td>\n","    </tr>\n","    <tr>\n","      <th>640</th>\n","      <td>Died</td>\n","      <td>In Kennel</td>\n","    </tr>\n","    <tr>\n","      <th>642</th>\n","      <td>Died</td>\n","      <td>In Kennel</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>158600</th>\n","      <td>Died</td>\n","      <td>In Foster</td>\n","    </tr>\n","    <tr>\n","      <th>158642</th>\n","      <td>Died</td>\n","      <td>At Vet</td>\n","    </tr>\n","    <tr>\n","      <th>158670</th>\n","      <td>Died</td>\n","      <td>Enroute</td>\n","    </tr>\n","    <tr>\n","      <th>158805</th>\n","      <td>Died</td>\n","      <td>In Foster</td>\n","    </tr>\n","    <tr>\n","      <th>158899</th>\n","      <td>Died</td>\n","      <td>In Kennel</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1187 rows × 2 columns</p>\n","</div>"],"text/plain":["       Outcome Type Outcome Subtype\n","56             Died       In Kennel\n","136            Died             NaN\n","622            Died      In Surgery\n","640            Died       In Kennel\n","642            Died       In Kennel\n","...             ...             ...\n","158600         Died       In Foster\n","158642         Died          At Vet\n","158670         Died         Enroute\n","158805         Died       In Foster\n","158899         Died       In Kennel\n","\n","[1187 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":217}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sCL3yQcKCzpW","executionInfo":{"status":"ok","timestamp":1611797111051,"user_tz":300,"elapsed":4950,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"4c57fd99-2325-4058-c7f0-005bd22a51af"},"source":["died_subtypes.isnull().sum()"],"execution_count":218,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Outcome Type         0\n","Outcome Subtype    109\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":218}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Ljg3R4WDIzS","executionInfo":{"status":"ok","timestamp":1611797111251,"user_tz":300,"elapsed":5142,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"130bb034-7245-47a7-b2b0-2d710a5fbc43"},"source":["died_subtypes['Outcome Subtype'].value_counts()"],"execution_count":219,"outputs":[{"output_type":"execute_result","data":{"text/plain":["In Kennel     596\n","In Foster     279\n","At Vet         97\n","Enroute        84\n","In Surgery     22\n","Name: Outcome Subtype, dtype: int64"]},"metadata":{"tags":[]},"execution_count":219}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"q7CG9YqMmnUQ","executionInfo":{"status":"ok","timestamp":1611797111252,"user_tz":300,"elapsed":5133,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"30164e9e-8403-45a1-a442-b86ec4604fe7"},"source":["#Making a pie chart for outcome subtypes for Died\n","died_labels = (['In Kennel', 'In Foster', 'At Vet', 'Enroute', 'In Surgery', 'No Subtype'])\n","died_sizes = (596, 279, 97, 84, 22, 109)\n","\n","fig, ax = plt.subplots()\n","\n","plt.pie(died_sizes, labels=died_labels, autopct='%1.1f%%', radius=2, startangle=90, explode=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05])\n","ax.set_title('Died Subtypes', fontweight='bold', y=1.45)\n","plt.show()"],"execution_count":220,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"5yjgrBiWAvWx","executionInfo":{"status":"ok","timestamp":1611797111254,"user_tz":300,"elapsed":5121,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"c9157501-fd0c-4ebc-dc2f-22ef0648e54e"},"source":["euthanasia_subtypes = outcomes_no_index[(outcomes_no_index['Outcome Type'] == 'Euthanasia')]\n","euthanasia_subtypes"],"execution_count":221,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>17</th>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>159258</th>\n","      <td>Euthanasia</td>\n","      <td>At Vet</td>\n","    </tr>\n","    <tr>\n","      <th>159267</th>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","    </tr>\n","    <tr>\n","      <th>159275</th>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>159276</th>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","    </tr>\n","    <tr>\n","      <th>159279</th>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8668 rows × 2 columns</p>\n","</div>"],"text/plain":["       Outcome Type Outcome Subtype\n","17       Euthanasia       Suffering\n","39       Euthanasia     Rabies Risk\n","49       Euthanasia       Suffering\n","52       Euthanasia       Suffering\n","55       Euthanasia       Suffering\n","...             ...             ...\n","159258   Euthanasia          At Vet\n","159267   Euthanasia     Rabies Risk\n","159275   Euthanasia       Suffering\n","159276   Euthanasia     Rabies Risk\n","159279   Euthanasia       Suffering\n","\n","[8668 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":221}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3toUxYFjBzIG","executionInfo":{"status":"ok","timestamp":1611797111255,"user_tz":300,"elapsed":5108,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"9270a3c5-2498-4d14-b566-dba705706dfd"},"source":["euthanasia_subtypes.isnull().sum()"],"execution_count":222,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Outcome Type         0\n","Outcome Subtype    227\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":222}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Rvxb-uOEiYB","executionInfo":{"status":"ok","timestamp":1611797111256,"user_tz":300,"elapsed":5101,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"81d899b5-6b49-40e6-fdba-4d2ac526516c"},"source":["euthanasia_subtypes['Outcome Subtype'].value_counts()"],"execution_count":223,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Rabies Risk            3683\n","Suffering              3307\n","Aggressive              688\n","Medical                 313\n","Behavior                183\n","At Vet                  179\n","Court/Investigation      52\n","Underage                 36\n","Name: Outcome Subtype, dtype: int64"]},"metadata":{"tags":[]},"execution_count":223}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"O8LmeI26rbK-","executionInfo":{"status":"ok","timestamp":1611797111465,"user_tz":300,"elapsed":5301,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"2104aeb9-964a-41da-f6c3-d73b2cdc6977"},"source":["#Making a pie chart for outcome subtypes for Euthenization\n","euth_labels = ['Rabies Risk', 'Suffering', 'Underage', 'Aggressive', 'Medical', 'Behavior', 'At Vet', 'No Subtype', 'Court/Investigation']\n","euth_sizes = (3683, 3307, 36, 688, 313, 183, 179, 227, 52)\n","\n","fig, ax = plt.subplots()\n","\n","plt.pie(euth_sizes, labels=euth_labels, radius=2, autopct='%1.1f%%', startangle=28, explode=[0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],\n","        colors=['royalblue', 'darkorange', 'teal', 'red', 'limegreen', 'gold', 'slateblue', 'grey', 'hotpink'])\n","ax.set_title('Euthenization Subtypes', fontweight='bold', y=1.45)\n","plt.show()"],"execution_count":224,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"mVFmuUoSPSkm"},"source":["##Euthenization Timeline"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"FjMjuaQJPZpC","executionInfo":{"status":"ok","timestamp":1611797111467,"user_tz":300,"elapsed":5289,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"36151d18-9b89-4655-bbff-b2ca7e91233e"},"source":["animal_shelter.head()"],"execution_count":225,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Animal ID</th>\n","      <th>Name Intake</th>\n","      <th>Intake DateTime</th>\n","      <th>Intake Type</th>\n","      <th>Intake Condition</th>\n","      <th>Animal Type_x</th>\n","      <th>Sex Upon Intake</th>\n","      <th>Age Upon Intake</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Name Outcome</th>\n","      <th>Outcome DateTime</th>\n","      <th>Date of Birth</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Sex Upon Outcome</th>\n","      <th>Age Upon Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A706918</td>\n","      <td>Belle</td>\n","      <td>07/05/2015 12:59:00 PM</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Spayed Female</td>\n","      <td>8 years</td>\n","      <td>English Springer Spaniel</td>\n","      <td>White/Liver</td>\n","      <td>Belle</td>\n","      <td>07/05/2015 03:13:00 PM</td>\n","      <td>07/05/2007</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Spayed Female</td>\n","      <td>8 years</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A724273</td>\n","      <td>Runster</td>\n","      <td>04/14/2016 06:43:00 PM</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Intact Male</td>\n","      <td>11 months</td>\n","      <td>Basenji Mix</td>\n","      <td>Sable/White</td>\n","      <td>Runster</td>\n","      <td>04/21/2016 05:17:00 PM</td>\n","      <td>04/17/2015</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Neutered Male</td>\n","      <td>1 year</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A665644</td>\n","      <td>NaN</td>\n","      <td>10/21/2013 07:59:00 AM</td>\n","      <td>Stray</td>\n","      <td>Sick</td>\n","      <td>Cat</td>\n","      <td>Intact Female</td>\n","      <td>4 weeks</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Calico</td>\n","      <td>NaN</td>\n","      <td>10/21/2013 11:39:00 AM</td>\n","      <td>09/21/2013</td>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","      <td>Intact Female</td>\n","      <td>4 weeks</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A682524</td>\n","      <td>Rio</td>\n","      <td>06/29/2014 10:38:00 AM</td>\n","      <td>Stray</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>4 years</td>\n","      <td>Doberman Pinsch/Australian Cattle Dog</td>\n","      <td>Tan/Gray</td>\n","      <td>Rio</td>\n","      <td>07/02/2014 02:16:00 PM</td>\n","      <td>06/29/2010</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Neutered Male</td>\n","      <td>4 years</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A743852</td>\n","      <td>Odin</td>\n","      <td>02/18/2017 12:46:00 PM</td>\n","      <td>Owner Surrender</td>\n","      <td>Normal</td>\n","      <td>Dog</td>\n","      <td>Neutered Male</td>\n","      <td>2 years</td>\n","      <td>Labrador Retriever Mix</td>\n","      <td>Chocolate</td>\n","      <td>Odin</td>\n","      <td>02/21/2017 05:44:00 PM</td>\n","      <td>02/18/2015</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","      <td>Neutered Male</td>\n","      <td>2 years</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Animal ID Name Intake  ... Sex Upon Outcome Age Upon Outcome\n","0   A706918       Belle  ...    Spayed Female          8 years\n","1   A724273     Runster  ...    Neutered Male           1 year\n","2   A665644         NaN  ...    Intact Female          4 weeks\n","3   A682524         Rio  ...    Neutered Male          4 years\n","4   A743852        Odin  ...    Neutered Male          2 years\n","\n","[5 rows x 17 columns]"]},"metadata":{"tags":[]},"execution_count":225}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"fBvCwLH-U9V-","executionInfo":{"status":"ok","timestamp":1611797111715,"user_tz":300,"elapsed":5519,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"a62e9cf4-f02b-4b98-bbb4-28f9f169084d"},"source":["animal_timeline = animal_shelter.drop(['Animal ID', 'Name Intake', 'Intake Type', 'Intake Condition', \t\n","                                      'Sex Upon Intake', 'Age Upon Intake', 'Name Outcome',\t\n","                                      'Date of Birth', 'Sex Upon Outcome', 'Age Upon Outcome'], axis=1)\n","animal_timeline.head()"],"execution_count":226,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Intake DateTime</th>\n","      <th>Animal Type_x</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>07/05/2015 12:59:00 PM</td>\n","      <td>Dog</td>\n","      <td>English Springer Spaniel</td>\n","      <td>White/Liver</td>\n","      <td>07/05/2015 03:13:00 PM</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>04/14/2016 06:43:00 PM</td>\n","      <td>Dog</td>\n","      <td>Basenji Mix</td>\n","      <td>Sable/White</td>\n","      <td>04/21/2016 05:17:00 PM</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10/21/2013 07:59:00 AM</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Calico</td>\n","      <td>10/21/2013 11:39:00 AM</td>\n","      <td>Transfer</td>\n","      <td>Partner</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>06/29/2014 10:38:00 AM</td>\n","      <td>Dog</td>\n","      <td>Doberman Pinsch/Australian Cattle Dog</td>\n","      <td>Tan/Gray</td>\n","      <td>07/02/2014 02:16:00 PM</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>02/18/2017 12:46:00 PM</td>\n","      <td>Dog</td>\n","      <td>Labrador Retriever Mix</td>\n","      <td>Chocolate</td>\n","      <td>02/21/2017 05:44:00 PM</td>\n","      <td>Return to Owner</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          Intake DateTime Animal Type_x  ...     Outcome Type Outcome Subtype\n","0  07/05/2015 12:59:00 PM           Dog  ...  Return to Owner             NaN\n","1  04/14/2016 06:43:00 PM           Dog  ...  Return to Owner             NaN\n","2  10/21/2013 07:59:00 AM           Cat  ...         Transfer         Partner\n","3  06/29/2014 10:38:00 AM           Dog  ...  Return to Owner             NaN\n","4  02/18/2017 12:46:00 PM           Dog  ...  Return to Owner             NaN\n","\n","[5 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":226}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"5Ke42wlpWmKg","executionInfo":{"status":"ok","timestamp":1611797111719,"user_tz":300,"elapsed":5510,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"6b8f5099-8fa7-4f1d-a04b-ddf43eea3573"},"source":["euth_datetime = animal_timeline[(animal_timeline['Outcome Type'] == 'Euthanasia')].reset_index()\n","euth_datetime = euth_datetime.drop('index', axis=1)\n","euth_datetime.head()"],"execution_count":227,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Intake DateTime</th>\n","      <th>Animal Type_x</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>02/04/2017 10:10:00 AM</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Black/White</td>\n","      <td>02/04/2017 10:48:00 AM</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>03/24/2016 04:39:00 PM</td>\n","      <td>Other</td>\n","      <td>Bat Mix</td>\n","      <td>Brown</td>\n","      <td>03/24/2016 05:17:00 PM</td>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>09/02/2019 11:52:00 AM</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>09/02/2019 01:12:00 PM</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>05/06/2019 09:30:00 PM</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>09/02/2019 01:12:00 PM</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>07/16/2019 10:35:00 AM</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>09/02/2019 01:12:00 PM</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          Intake DateTime Animal Type_x  ... Outcome Type Outcome Subtype\n","0  02/04/2017 10:10:00 AM           Cat  ...   Euthanasia       Suffering\n","1  03/24/2016 04:39:00 PM         Other  ...   Euthanasia     Rabies Risk\n","2  09/02/2019 11:52:00 AM           Dog  ...   Euthanasia       Suffering\n","3  05/06/2019 09:30:00 PM           Dog  ...   Euthanasia       Suffering\n","4  07/16/2019 10:35:00 AM           Dog  ...   Euthanasia       Suffering\n","\n","[5 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":227}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"9EYQ63jlUUeS","executionInfo":{"status":"ok","timestamp":1611797111720,"user_tz":300,"elapsed":5497,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"af25a83a-8122-42f9-82aa-f18dee42e538"},"source":["euth_datetime = euth_datetime.reset_index()\n","euth_datetime.head()"],"execution_count":228,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Intake DateTime</th>\n","      <th>Animal Type_x</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>02/04/2017 10:10:00 AM</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Black/White</td>\n","      <td>02/04/2017 10:48:00 AM</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>03/24/2016 04:39:00 PM</td>\n","      <td>Other</td>\n","      <td>Bat Mix</td>\n","      <td>Brown</td>\n","      <td>03/24/2016 05:17:00 PM</td>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>09/02/2019 11:52:00 AM</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>09/02/2019 01:12:00 PM</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>05/06/2019 09:30:00 PM</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>09/02/2019 01:12:00 PM</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>07/16/2019 10:35:00 AM</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>09/02/2019 01:12:00 PM</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   index         Intake DateTime  ... Outcome Type Outcome Subtype\n","0      0  02/04/2017 10:10:00 AM  ...   Euthanasia       Suffering\n","1      1  03/24/2016 04:39:00 PM  ...   Euthanasia     Rabies Risk\n","2      2  09/02/2019 11:52:00 AM  ...   Euthanasia       Suffering\n","3      3  05/06/2019 09:30:00 PM  ...   Euthanasia       Suffering\n","4      4  07/16/2019 10:35:00 AM  ...   Euthanasia       Suffering\n","\n","[5 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":228}]},{"cell_type":"code","metadata":{"id":"OrOfnxYagD_U","executionInfo":{"status":"ok","timestamp":1611797113890,"user_tz":300,"elapsed":7654,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}}},"source":["euth_datetime['Intake DateTime'] = pd.to_datetime(euth_datetime['Intake DateTime'])\n","euth_datetime['Outcome DateTime'] =  pd.to_datetime(euth_datetime['Outcome DateTime'])"],"execution_count":229,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"FinrTaHgjU1S","executionInfo":{"status":"ok","timestamp":1611797113975,"user_tz":300,"elapsed":7730,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"6edc207b-df0e-423a-a020-6a81ee5877f1"},"source":["euth_in_date = euth_datetime['Intake DateTime'].dt.date.reset_index()\n","euth_in_time = euth_datetime['Intake DateTime'].dt.time.reset_index()\n","euth_out_date = euth_datetime['Outcome DateTime'].dt.date.reset_index()\n","euth_out_time = euth_datetime['Outcome DateTime'].dt.time.reset_index()\n","\n","euth_in_date.head()"],"execution_count":230,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Intake DateTime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2017-02-04</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2016-03-24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2019-09-02</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2019-05-06</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2019-07-16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   index Intake DateTime\n","0      0      2017-02-04\n","1      1      2016-03-24\n","2      2      2019-09-02\n","3      3      2019-05-06\n","4      4      2019-07-16"]},"metadata":{"tags":[]},"execution_count":230}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"KVaRIzb6kyUB","executionInfo":{"status":"ok","timestamp":1611797113976,"user_tz":300,"elapsed":7717,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"a0dd3327-f67d-495b-aec1-6d6899f3bbf9"},"source":["euth_in_datetime = pd.merge(euth_in_date, euth_in_time, on='index')\n","euth_in_datetime.head()"],"execution_count":231,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Intake DateTime_x</th>\n","      <th>Intake DateTime_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2017-02-04</td>\n","      <td>10:10:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2016-03-24</td>\n","      <td>16:39:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2019-09-02</td>\n","      <td>11:52:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2019-05-06</td>\n","      <td>21:30:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2019-07-16</td>\n","      <td>10:35:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   index Intake DateTime_x Intake DateTime_y\n","0      0        2017-02-04          10:10:00\n","1      1        2016-03-24          16:39:00\n","2      2        2019-09-02          11:52:00\n","3      3        2019-05-06          21:30:00\n","4      4        2019-07-16          10:35:00"]},"metadata":{"tags":[]},"execution_count":231}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"ymkAOfm3lcKd","executionInfo":{"status":"ok","timestamp":1611797113978,"user_tz":300,"elapsed":7702,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"fa33b462-96c1-43ff-9b38-d1e9824f286f"},"source":["euth_out_datetime = pd.merge(euth_out_date, euth_out_time, on='index')\n","euth_out_datetime.head()"],"execution_count":232,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Outcome DateTime_x</th>\n","      <th>Outcome DateTime_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2017-02-04</td>\n","      <td>10:48:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2016-03-24</td>\n","      <td>17:17:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   index Outcome DateTime_x Outcome DateTime_y\n","0      0         2017-02-04           10:48:00\n","1      1         2016-03-24           17:17:00\n","2      2         2019-09-02           13:12:00\n","3      3         2019-09-02           13:12:00\n","4      4         2019-09-02           13:12:00"]},"metadata":{"tags":[]},"execution_count":232}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"faEkfRrmlsm0","executionInfo":{"status":"ok","timestamp":1611797113979,"user_tz":300,"elapsed":7688,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"9041b0f5-0aeb-4750-d90a-113f23b87ee3"},"source":["euth_time = pd.merge(euth_in_datetime, euth_out_datetime, on='index')\n","euth_time.head()"],"execution_count":233,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Intake DateTime_x</th>\n","      <th>Intake DateTime_y</th>\n","      <th>Outcome DateTime_x</th>\n","      <th>Outcome DateTime_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2017-02-04</td>\n","      <td>10:10:00</td>\n","      <td>2017-02-04</td>\n","      <td>10:48:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2016-03-24</td>\n","      <td>16:39:00</td>\n","      <td>2016-03-24</td>\n","      <td>17:17:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2019-09-02</td>\n","      <td>11:52:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2019-05-06</td>\n","      <td>21:30:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2019-07-16</td>\n","      <td>10:35:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   index Intake DateTime_x  ... Outcome DateTime_x Outcome DateTime_y\n","0      0        2017-02-04  ...         2017-02-04           10:48:00\n","1      1        2016-03-24  ...         2016-03-24           17:17:00\n","2      2        2019-09-02  ...         2019-09-02           13:12:00\n","3      3        2019-05-06  ...         2019-09-02           13:12:00\n","4      4        2019-07-16  ...         2019-09-02           13:12:00\n","\n","[5 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":233}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"yv07Hfiiatmk","executionInfo":{"status":"ok","timestamp":1611797113980,"user_tz":300,"elapsed":7674,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"a5ee3c1d-f6cc-4989-8f17-926d895496b8"},"source":["euth_time.columns = ['index','Intake Date','Intake Time', 'Outcome Date','Outcome Time']\n","euth_time.head()"],"execution_count":234,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Intake Date</th>\n","      <th>Intake Time</th>\n","      <th>Outcome Date</th>\n","      <th>Outcome Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2017-02-04</td>\n","      <td>10:10:00</td>\n","      <td>2017-02-04</td>\n","      <td>10:48:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2016-03-24</td>\n","      <td>16:39:00</td>\n","      <td>2016-03-24</td>\n","      <td>17:17:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2019-09-02</td>\n","      <td>11:52:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2019-05-06</td>\n","      <td>21:30:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2019-07-16</td>\n","      <td>10:35:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   index Intake Date Intake Time Outcome Date Outcome Time\n","0      0  2017-02-04    10:10:00   2017-02-04     10:48:00\n","1      1  2016-03-24    16:39:00   2016-03-24     17:17:00\n","2      2  2019-09-02    11:52:00   2019-09-02     13:12:00\n","3      3  2019-05-06    21:30:00   2019-09-02     13:12:00\n","4      4  2019-07-16    10:35:00   2019-09-02     13:12:00"]},"metadata":{"tags":[]},"execution_count":234}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"KQStATqZdywu","executionInfo":{"status":"ok","timestamp":1611797113981,"user_tz":300,"elapsed":7660,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"9bfbb5ae-45ce-4aa3-b376-5aff473e8f0d"},"source":["euth_timeline = pd.merge(euth_datetime, euth_time, on='index')\n","euth_timeline = euth_timeline.drop('index', axis=1)\n","euth_timeline.head()"],"execution_count":235,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Intake DateTime</th>\n","      <th>Animal Type_x</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Intake Date</th>\n","      <th>Intake Time</th>\n","      <th>Outcome Date</th>\n","      <th>Outcome Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-02-04 10:10:00</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Black/White</td>\n","      <td>2017-02-04 10:48:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2017-02-04</td>\n","      <td>10:10:00</td>\n","      <td>2017-02-04</td>\n","      <td>10:48:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2016-03-24 16:39:00</td>\n","      <td>Other</td>\n","      <td>Bat Mix</td>\n","      <td>Brown</td>\n","      <td>2016-03-24 17:17:00</td>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","      <td>2016-03-24</td>\n","      <td>16:39:00</td>\n","      <td>2016-03-24</td>\n","      <td>17:17:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-09-02 11:52:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-09-02</td>\n","      <td>11:52:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-05-06 21:30:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-05-06</td>\n","      <td>21:30:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-07-16 10:35:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-07-16</td>\n","      <td>10:35:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Intake DateTime Animal Type_x  ... Outcome Date Outcome Time\n","0 2017-02-04 10:10:00           Cat  ...   2017-02-04     10:48:00\n","1 2016-03-24 16:39:00         Other  ...   2016-03-24     17:17:00\n","2 2019-09-02 11:52:00           Dog  ...   2019-09-02     13:12:00\n","3 2019-05-06 21:30:00           Dog  ...   2019-09-02     13:12:00\n","4 2019-07-16 10:35:00           Dog  ...   2019-09-02     13:12:00\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":235}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"xTUBQ9I5YusS","executionInfo":{"status":"ok","timestamp":1611797113989,"user_tz":300,"elapsed":7656,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"acf1deab-1170-47fa-970d-e0aed08bf2af"},"source":["euth_timeline['Days to Euth'] = (euth_timeline['Outcome Date'] - euth_timeline['Intake Date']).dt.days\n","euth_timeline.head(3)"],"execution_count":236,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Intake DateTime</th>\n","      <th>Animal Type_x</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Intake Date</th>\n","      <th>Intake Time</th>\n","      <th>Outcome Date</th>\n","      <th>Outcome Time</th>\n","      <th>Days to Euth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-02-04 10:10:00</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Black/White</td>\n","      <td>2017-02-04 10:48:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2017-02-04</td>\n","      <td>10:10:00</td>\n","      <td>2017-02-04</td>\n","      <td>10:48:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2016-03-24 16:39:00</td>\n","      <td>Other</td>\n","      <td>Bat Mix</td>\n","      <td>Brown</td>\n","      <td>2016-03-24 17:17:00</td>\n","      <td>Euthanasia</td>\n","      <td>Rabies Risk</td>\n","      <td>2016-03-24</td>\n","      <td>16:39:00</td>\n","      <td>2016-03-24</td>\n","      <td>17:17:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-09-02 11:52:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-09-02</td>\n","      <td>11:52:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Intake DateTime Animal Type_x  ... Outcome Time Days to Euth\n","0 2017-02-04 10:10:00           Cat  ...     10:48:00            0\n","1 2016-03-24 16:39:00         Other  ...     17:17:00            0\n","2 2019-09-02 11:52:00           Dog  ...     13:12:00            0\n","\n","[3 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":236}]},{"cell_type":"markdown","metadata":{"id":"3T23aEhCjJdX"},"source":["##Euthenization Graph Based on Intake and Outcome Dates for Dogs"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"lLHxxfVQ8508","executionInfo":{"status":"ok","timestamp":1611797113990,"user_tz":300,"elapsed":7644,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"9b7faecb-a3b8-422e-b07c-e3f173862f2e"},"source":["euth_dogs = euth_timeline[(euth_timeline['Animal Type_x'] == 'Dog')].reset_index()\n","euth_dogs = euth_dogs.drop('index', axis=1)\n","euth_dogs.head()"],"execution_count":237,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Intake DateTime</th>\n","      <th>Animal Type_x</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Intake Date</th>\n","      <th>Intake Time</th>\n","      <th>Outcome Date</th>\n","      <th>Outcome Time</th>\n","      <th>Days to Euth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-09-02 11:52:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-09-02</td>\n","      <td>11:52:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-05-06 21:30:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-05-06</td>\n","      <td>21:30:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-07-16 10:35:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-07-16</td>\n","      <td>10:35:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016-06-07 17:51:00</td>\n","      <td>Dog</td>\n","      <td>Wire Hair Fox Terrier Mix</td>\n","      <td>White/Brown</td>\n","      <td>2016-06-07 18:00:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2016-06-07</td>\n","      <td>17:51:00</td>\n","      <td>2016-06-07</td>\n","      <td>18:00:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2015-01-23 12:13:00</td>\n","      <td>Dog</td>\n","      <td>Pit Bull Mix</td>\n","      <td>White/Brown Brindle</td>\n","      <td>2015-01-24 08:46:00</td>\n","      <td>Euthanasia</td>\n","      <td>Aggressive</td>\n","      <td>2015-01-23</td>\n","      <td>12:13:00</td>\n","      <td>2015-01-24</td>\n","      <td>08:46:00</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Intake DateTime Animal Type_x  ... Outcome Time Days to Euth\n","0 2019-09-02 11:52:00           Dog  ...     13:12:00            0\n","1 2019-05-06 21:30:00           Dog  ...     13:12:00          119\n","2 2019-07-16 10:35:00           Dog  ...     13:12:00           48\n","3 2016-06-07 17:51:00           Dog  ...     18:00:00            0\n","4 2015-01-23 12:13:00           Dog  ...     08:46:00            1\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":237}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dLEBaStKGW1R","executionInfo":{"status":"ok","timestamp":1611797113991,"user_tz":300,"elapsed":7634,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"62de718b-b059-427a-96fc-df8aca23cde2"},"source":["euth_dogs['Days to Euth'].value_counts().sort_index()"],"execution_count":238,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-506       1\n"," 0       543\n"," 1       189\n"," 2        96\n"," 3        86\n","        ... \n"," 1894      1\n"," 1971      1\n"," 2055      1\n"," 2061      1\n"," 2123      1\n","Name: Days to Euth, Length: 283, dtype: int64"]},"metadata":{"tags":[]},"execution_count":238}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rS9z_3LWPlrU","executionInfo":{"status":"ok","timestamp":1611797113992,"user_tz":300,"elapsed":7627,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"ab552404-eb34-4b97-f293-86ebbafa7146"},"source":["days_to_euth = (euth_dogs['Outcome Date'] - euth_dogs['Intake Date']).dt.days.tolist()\n","days_to_euth.index(-506)"],"execution_count":239,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1032"]},"metadata":{"tags":[]},"execution_count":239}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"M_GUwS-gRW1m","executionInfo":{"status":"ok","timestamp":1611797113992,"user_tz":300,"elapsed":7615,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"81c91c7d-fe8e-480e-a59b-5219585fcb1f"},"source":["euth_dogs = euth_dogs.drop(labels=[1032], axis=0)\n","euth_dogs.head()"],"execution_count":240,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Intake DateTime</th>\n","      <th>Animal Type_x</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Intake Date</th>\n","      <th>Intake Time</th>\n","      <th>Outcome Date</th>\n","      <th>Outcome Time</th>\n","      <th>Days to Euth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-09-02 11:52:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-09-02</td>\n","      <td>11:52:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-05-06 21:30:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-05-06</td>\n","      <td>21:30:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-07-16 10:35:00</td>\n","      <td>Dog</td>\n","      <td>Boxer Mix</td>\n","      <td>White</td>\n","      <td>2019-09-02 13:12:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2019-07-16</td>\n","      <td>10:35:00</td>\n","      <td>2019-09-02</td>\n","      <td>13:12:00</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016-06-07 17:51:00</td>\n","      <td>Dog</td>\n","      <td>Wire Hair Fox Terrier Mix</td>\n","      <td>White/Brown</td>\n","      <td>2016-06-07 18:00:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2016-06-07</td>\n","      <td>17:51:00</td>\n","      <td>2016-06-07</td>\n","      <td>18:00:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2015-01-23 12:13:00</td>\n","      <td>Dog</td>\n","      <td>Pit Bull Mix</td>\n","      <td>White/Brown Brindle</td>\n","      <td>2015-01-24 08:46:00</td>\n","      <td>Euthanasia</td>\n","      <td>Aggressive</td>\n","      <td>2015-01-23</td>\n","      <td>12:13:00</td>\n","      <td>2015-01-24</td>\n","      <td>08:46:00</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Intake DateTime Animal Type_x  ... Outcome Time Days to Euth\n","0 2019-09-02 11:52:00           Dog  ...     13:12:00            0\n","1 2019-05-06 21:30:00           Dog  ...     13:12:00          119\n","2 2019-07-16 10:35:00           Dog  ...     13:12:00           48\n","3 2016-06-07 17:51:00           Dog  ...     18:00:00            0\n","4 2015-01-23 12:13:00           Dog  ...     08:46:00            1\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":240}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GNlNzUZgRjl3","executionInfo":{"status":"ok","timestamp":1611797113993,"user_tz":300,"elapsed":7606,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"32bd5855-bcf3-4e2a-c52d-02ced467e940"},"source":["euth_dogs['Days to Euth'].value_counts().sort_index()"],"execution_count":241,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       543\n","1       189\n","2        96\n","3        86\n","4       125\n","       ... \n","1894      1\n","1971      1\n","2055      1\n","2061      1\n","2123      1\n","Name: Days to Euth, Length: 282, dtype: int64"]},"metadata":{"tags":[]},"execution_count":241}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"I-XdeAZrqsLv","executionInfo":{"status":"ok","timestamp":1611797114163,"user_tz":300,"elapsed":7764,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"af6dde8a-0026-4cbc-9172-4def555553db"},"source":["fig, ax = plt.subplots(figsize=(2, 6))\n","\n","ax.boxplot(x=euth_dogs['Days to Euth'], notch=False)\n","\n","ax.set_title('Days at Facility before Euthenization')\n","ax.set_ylabel('Day')\n","ax.set_xlabel('Dogs')\n","ax.set_yticks([0, 250, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250])\n","\n","plt.grid(True)\n","plt.show()"],"execution_count":242,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 144x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"fLxDuHKmTCFV","executionInfo":{"status":"ok","timestamp":1611797114169,"user_tz":300,"elapsed":7755,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"27a8f3df-5b3d-4432-8850-7ba05808c16c"},"source":["fig, ax = plt.subplots(figsize=(2, 6))\n","\n","ax.boxplot(x=euth_dogs['Days to Euth'])\n","\n","ax.set_title('Days at Facility before Euthenization')\n","ax.set_ylabel('Day')\n","ax.set_xlabel('Dogs')\n","ax.set_yticks([0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60])\n","ax.set_ylim(-5,60)\n","\n","plt.grid(True)\n","plt.show()"],"execution_count":243,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 144x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"wmmac6Gt8fmw"},"source":["##Euthenization Graph Based on Intake and Outcome Dates for Cats"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"zbmY4Y5-8ppn","executionInfo":{"status":"ok","timestamp":1611797114598,"user_tz":300,"elapsed":8168,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"471fc835-e445-4f1b-e360-1f389146777e"},"source":["euth_cats = euth_timeline[(euth_timeline['Animal Type_x'] == 'Cat')].reset_index()\n","euth_cats = euth_cats.drop('index', axis=1)\n","euth_cats.head()"],"execution_count":244,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Intake DateTime</th>\n","      <th>Animal Type_x</th>\n","      <th>Breed_x</th>\n","      <th>Color_x</th>\n","      <th>Outcome DateTime</th>\n","      <th>Outcome Type</th>\n","      <th>Outcome Subtype</th>\n","      <th>Intake Date</th>\n","      <th>Intake Time</th>\n","      <th>Outcome Date</th>\n","      <th>Outcome Time</th>\n","      <th>Days to Euth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-02-04 10:10:00</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Black/White</td>\n","      <td>2017-02-04 10:48:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2017-02-04</td>\n","      <td>10:10:00</td>\n","      <td>2017-02-04</td>\n","      <td>10:48:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-04-02 07:16:00</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Brown Tabby</td>\n","      <td>2019-04-02 08:52:00</td>\n","      <td>Euthanasia</td>\n","      <td>At Vet</td>\n","      <td>2019-04-02</td>\n","      <td>07:16:00</td>\n","      <td>2019-04-02</td>\n","      <td>08:52:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2016-06-19 16:13:00</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Black</td>\n","      <td>2016-06-19 16:30:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2016-06-19</td>\n","      <td>16:13:00</td>\n","      <td>2016-06-19</td>\n","      <td>16:30:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-01-16 12:08:00</td>\n","      <td>Cat</td>\n","      <td>Domestic Longhair</td>\n","      <td>Black/White</td>\n","      <td>2020-01-25 11:57:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2020-01-16</td>\n","      <td>12:08:00</td>\n","      <td>2020-01-25</td>\n","      <td>11:57:00</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2014-12-26 11:39:00</td>\n","      <td>Cat</td>\n","      <td>Domestic Shorthair Mix</td>\n","      <td>Black/White</td>\n","      <td>2014-12-26 13:59:00</td>\n","      <td>Euthanasia</td>\n","      <td>Suffering</td>\n","      <td>2014-12-26</td>\n","      <td>11:39:00</td>\n","      <td>2014-12-26</td>\n","      <td>13:59:00</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Intake DateTime Animal Type_x  ... Outcome Time Days to Euth\n","0 2017-02-04 10:10:00           Cat  ...     10:48:00            0\n","1 2019-04-02 07:16:00           Cat  ...     08:52:00            0\n","2 2016-06-19 16:13:00           Cat  ...     16:30:00            0\n","3 2020-01-16 12:08:00           Cat  ...     11:57:00            9\n","4 2014-12-26 11:39:00           Cat  ...     13:59:00            0\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":244}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dhrcIhCcupJ0","executionInfo":{"status":"ok","timestamp":1611797114603,"user_tz":300,"elapsed":8163,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"73fe7828-7d74-4634-f1f2-341a2f7850fc"},"source":["euth_cats['Days to Euth'].value_counts().sort_index()"],"execution_count":245,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       1053\n","1        231\n","2         83\n","3         68\n","4        138\n","        ... \n","1433       1\n","1685       1\n","1724       1\n","1935       1\n","2020       1\n","Name: Days to Euth, Length: 126, dtype: int64"]},"metadata":{"tags":[]},"execution_count":245}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"LyqD-qmguop_","executionInfo":{"status":"ok","timestamp":1611797114604,"user_tz":300,"elapsed":8150,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"891f5075-7e7f-4747-a8e3-91ef21d7f09a"},"source":["fig, ax = plt.subplots(figsize=(2, 6))\n","\n","ax.boxplot(x=euth_cats['Days to Euth'])\n","\n","ax.set_title('Days at Facility before Euthenization')\n","ax.set_ylabel('Day')\n","ax.set_xlabel('Cats')\n","ax.set_yticks([0, 250, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250])\n","\n","plt.grid(True)\n","plt.show()"],"execution_count":246,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 144x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"a9wJGz5Huo8L","executionInfo":{"status":"ok","timestamp":1611797114822,"user_tz":300,"elapsed":8349,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"a37488a3-1c44-43e5-d2c6-2c5d76cf16a5"},"source":["fig, ax = plt.subplots(figsize=(2, 6))\n","\n","ax.boxplot(x=euth_cats['Days to Euth'])\n","\n","ax.set_title('Days at Facility before Euthenization')\n","ax.set_ylabel('Day')\n","ax.set_xlabel('Cats')\n","ax.set_ylim(-2, 20)\n","\n","\n","\n","plt.grid(True)\n","plt.show()"],"execution_count":247,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 144x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"fTVOmV5Aj3ml"},"source":["##Euthenization Comparison Graph Based on Subtype for Dogs"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IZGr0JjGj7hY","executionInfo":{"status":"ok","timestamp":1611797114830,"user_tz":300,"elapsed":8343,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"61642088-90e5-44f4-e706-fa579e814042"},"source":["euth_dogs['Outcome Subtype'].value_counts()"],"execution_count":248,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Suffering              889\n","Aggressive             683\n","Behavior               183\n","Rabies Risk            114\n","Medical                 79\n","At Vet                  65\n","Court/Investigation     52\n","Name: Outcome Subtype, dtype: int64"]},"metadata":{"tags":[]},"execution_count":248}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zumDt08rV_jZ","executionInfo":{"status":"ok","timestamp":1611797114834,"user_tz":300,"elapsed":8333,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"125fdd22-467b-485e-814c-06d0bcff8ec4"},"source":["euth_dogs['Outcome Subtype'].isnull().sum()"],"execution_count":249,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13"]},"metadata":{"tags":[]},"execution_count":249}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"BBwUIQqaWF50","executionInfo":{"status":"ok","timestamp":1611797114836,"user_tz":300,"elapsed":8320,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"e653d184-0b8d-4ec6-a1e5-936099841210"},"source":["dog_labels = ['Suffering', 'Aggressive', 'Behavior', 'Rabies Risk', 'Medical', 'At Vet', 'Court/Investigation', 'No Subtype']\n","dog_sizes = (890, 683, 183, 114, 79, 65, 52, 13)\n","\n","fig, ax = plt.subplots()\n","\n","ax.pie(x=dog_sizes, labels=dog_labels, radius=2, autopct='%1.1f%%', explode=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05], startangle=25, \n","       colors=['darkorange', 'red', 'gold', 'royalblue', 'limegreen', 'slateblue', 'hotpink', 'grey'])\n","ax.set_title('Dog Euthenization Subtypes', fontweight='bold', y=1.45)\n","\n","plt.show()"],"execution_count":250,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"5MUpJ3Gh8m3V"},"source":["##Euthenization Comparison Graph Based on Subtype for Cats"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EGtB3cin8o5Z","executionInfo":{"status":"ok","timestamp":1611797114838,"user_tz":300,"elapsed":8313,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"bdd2aaae-02f4-4a2c-ac4e-d075c3365edb"},"source":["euth_cats['Outcome Subtype'].value_counts()"],"execution_count":251,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Suffering      1693\n","At Vet          103\n","Rabies Risk      87\n","Medical          74\n","Aggressive        4\n","Underage          1\n","Name: Outcome Subtype, dtype: int64"]},"metadata":{"tags":[]},"execution_count":251}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9XYW-mkGZEfF","executionInfo":{"status":"ok","timestamp":1611797114840,"user_tz":300,"elapsed":8307,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"58f4188d-52fd-46f8-adb9-7c9e188d3ff4"},"source":["euth_cats['Outcome Subtype'].isnull().sum()"],"execution_count":252,"outputs":[{"output_type":"execute_result","data":{"text/plain":["16"]},"metadata":{"tags":[]},"execution_count":252}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"4dpm-D4OZJCa","executionInfo":{"status":"ok","timestamp":1611797114847,"user_tz":300,"elapsed":8304,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"8f180995-a125-4e36-b413-534331d876bd"},"source":["cat_labels = ['Suffering', 'Aggressive', 'At Vet', 'Rabies Risk', 'Underage', 'Medical', 'No Subtype']\n","cat_sizes = (1693, 4, 103, 87, 1, 74, 16)\n","\n","fig, ax = plt.subplots()\n","\n","ax.pie(x=cat_sizes, labels=cat_labels, radius=2, autopct='%1.1f%%', explode=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05], startangle=25,\n","       colors=['darkorange', 'red', 'slateblue', 'royalblue', 'teal', 'limegreen', 'grey'])\n","ax.set_title('Cat Euthenization Subtypes', fontweight='bold', y=1.45)\n","\n","plt.show()"],"execution_count":253,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"BSqP4acVdZeM"},"source":["##Are 90% of animals not euthenized? Do they go to a home?"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"ktivBrA53qdk","executionInfo":{"status":"ok","timestamp":1611797115038,"user_tz":300,"elapsed":8479,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"874b4dd9-321b-44ea-82d2-2a77f89a6bf1"},"source":["outcome_no_index = outcome.drop('index', axis=1)\n","outcome_no_index"],"execution_count":254,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Outcome Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Transfer</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>159275</th>\n","      <td>Euthanasia</td>\n","    </tr>\n","    <tr>\n","      <th>159276</th>\n","      <td>Euthanasia</td>\n","    </tr>\n","    <tr>\n","      <th>159277</th>\n","      <td>Return to Owner</td>\n","    </tr>\n","    <tr>\n","      <th>159278</th>\n","      <td>Transfer</td>\n","    </tr>\n","    <tr>\n","      <th>159279</th>\n","      <td>Euthanasia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>159280 rows × 1 columns</p>\n","</div>"],"text/plain":["           Outcome Type\n","0       Return to Owner\n","1       Return to Owner\n","2              Transfer\n","3       Return to Owner\n","4       Return to Owner\n","...                 ...\n","159275       Euthanasia\n","159276       Euthanasia\n","159277  Return to Owner\n","159278         Transfer\n","159279       Euthanasia\n","\n","[159280 rows x 1 columns]"]},"metadata":{"tags":[]},"execution_count":254}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JSKGUa9V30-A","executionInfo":{"status":"ok","timestamp":1611797115040,"user_tz":300,"elapsed":8468,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"5704daa2-a200-4cf9-892d-30c528b61264"},"source":["outcome_no_index.isnull().sum()"],"execution_count":255,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Outcome Type    16\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":255}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"ZfG9-nxE4B-d","executionInfo":{"status":"ok","timestamp":1611797115250,"user_tz":300,"elapsed":8664,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"9145560c-838f-4473-e9ec-76a82a3a0902"},"source":["#Same code as seen previously - I wanted to put it here under the specific heading so I can easily find it\n","fig, ax = plt.subplots()\n","\n","plt.bar(x=['Adoption', 'Transfer', 'Return to Owner', 'Euthenize', 'RTO Adoption', 'Died', 'Disposal', 'Missing', 'Relocate', 'Not Listed'],\n","        height=[71803, 39824, 35793, 8668, 1312, 1187, 566, 91, 20, 16])\n","\n","plt.xlabel('Outcome Type')\n","plt.ylabel('Number of Animals with Outcome')\n","plt.title('Austin Animal Center Outcomes for Animals that Entered Facility')\n","plt.xticks(rotation=45)\n","\n","plt.show()"],"execution_count":256,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PcB8M9kcXT5w","executionInfo":{"status":"ok","timestamp":1611797115260,"user_tz":300,"elapsed":8663,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"ae6fca2e-2829-4271-cea9-ed7cb8957a7a"},"source":["outcome_no_index.value_counts()"],"execution_count":257,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Outcome Type   \n","Adoption           71803\n","Transfer           39824\n","Return to Owner    35793\n","Euthanasia          8668\n","Rto-Adopt           1312\n","Died                1187\n","Disposal             566\n","Missing               91\n","Relocate              20\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":257}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pFKNHuyw36K3","executionInfo":{"status":"ok","timestamp":1611797115261,"user_tz":300,"elapsed":8654,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"8f47cb3e-4db8-44e1-f019-5ac37ec0b697"},"source":["outcome_no_index.value_counts().sum()"],"execution_count":258,"outputs":[{"output_type":"execute_result","data":{"text/plain":["159264"]},"metadata":{"tags":[]},"execution_count":258}]},{"cell_type":"code","metadata":{"id":"KHnVGaJE4swc","executionInfo":{"status":"ok","timestamp":1611797115262,"user_tz":300,"elapsed":8646,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}}},"source":["#For comparison purposes, I will find out what percent are not euthenized AND what percent have died in general (euthenization, died at facility, \n","#and disposal)\n","#I will also find out what percent are adopted and returned to their owner."],"execution_count":259,"outputs":[]},{"cell_type":"code","metadata":{"id":"s9Q8VLBDVL1Z","executionInfo":{"status":"ok","timestamp":1611797115263,"user_tz":300,"elapsed":8639,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}}},"source":["def percentage(a, b):\n","    return round(a / b * 100, 2)"],"execution_count":260,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O2tzBzU4Xk9v","executionInfo":{"status":"ok","timestamp":1611797115264,"user_tz":300,"elapsed":8632,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"ca4e9f42-abfa-4778-e4f8-3764f5fd8012"},"source":["#Percentage of all generalized \"died\"\n","general_died = 1187 + 566 + 8668\n","percentage(general_died, 159264)"],"execution_count":261,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6.54"]},"metadata":{"tags":[]},"execution_count":261}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g9L_BzW4XNRO","executionInfo":{"status":"ok","timestamp":1611797115265,"user_tz":300,"elapsed":8625,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"9a1d3ae3-45cd-4482-c612-99d7e837126d"},"source":["#Percentage of just Adoption\n","percentage(71803, 159264)"],"execution_count":262,"outputs":[{"output_type":"execute_result","data":{"text/plain":["45.08"]},"metadata":{"tags":[]},"execution_count":262}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lDkedqgMY6ve","executionInfo":{"status":"ok","timestamp":1611797115266,"user_tz":300,"elapsed":8618,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"c7a9c892-188e-41dc-9e21-9e8a62602e78"},"source":["#Percentage of adoption, return to owner, and rto-adopt\n","any_adoption = 71803 + 35793 + 1312\n","percentage(any_adoption, 159264)"],"execution_count":263,"outputs":[{"output_type":"execute_result","data":{"text/plain":["68.38"]},"metadata":{"tags":[]},"execution_count":263}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pOpjh2SLYtls","executionInfo":{"status":"ok","timestamp":1611797115269,"user_tz":300,"elapsed":8613,"user":{"displayName":"Alexandria Duell","photoUrl":"","userId":"09772188241880355776"}},"outputId":"50520bd7-dc1f-4686-e0cc-8446039130e9"},"source":["#Percentage of all other outcomes besides euthanasia\n","all_not_euth = 159264 - 8668\n","percentage(all_not_euth, 159264)"],"execution_count":264,"outputs":[{"output_type":"execute_result","data":{"text/plain":["94.56"]},"metadata":{"tags":[]},"execution_count":264}]}]}